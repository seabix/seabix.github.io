<div class="tab">
<p class="area">Algorithm Analysis</p><p>
You have a very large list containing employee names and their phone numbers, which has been sorted alphabetically by name (and you have no auxiliary data structures).  Which of the following algorithms is a valid way to locate the entry for a given name with the fastest big-O runtime?<br />
<ol type="a">
<li><input type='radio' name='q32' id='q32' value='a'> Brute-force search</li>
<li><input type='radio' name='q32' id='q32' value='b'> Bisection search</li>
<li><input type='radio' name='q32' id='q32' value='c'> Newtonâ€™s method</li>
<li><input type='radio' name='q32' id='q32' value='d'> Gradient descent</li>
<li><input type='radio' name='q32' id='q32' value='e'> Merge sort</li>
</ol>
</p></div>